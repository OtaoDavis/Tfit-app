workflows:
  ios-capacitor-testflight:
    name: iOS TestFlight Build
    environment:
      node: 22.15.0
      xcode: latest
      cocoapods: default
      vars:
        DEVELOPMENT_TEAM: "X3L24943PL" 
        BUNDLE_ID: "com.treasurefitness.com"
      groups:
        - firebase 
    integrations:
      app_store_connect: Codemagic app manager

    scripts:
      - name: Install dependencies
        script: |
          npm ci
          npm run build

      - name: Capacitor Sync and Pod Install
        script: |
          npx cap sync ios
          cd ios/App && pod install

      - name: Automatic Code Signing Setup
        script: |
          # Initialize a new keychain for code signing
          keychain initialize

          # Fetch or create signing files using the App Store Connect API key
          # The 'app-store-connect' tool will use the API key configured in 'integrations'.
          # It will automatically place the fetched certificate and provisioning profile
          # into the keychain initialized above.
          app-store-connect fetch-signing-files "${BUNDLE_ID}" --type IOS_APP_STORE --create

          # Change to the iOS project directory so xcode-project can find the workspace
          cd ios/App

          # Use profiles. This step reads your Xcode project settings and applies
          # the fetched provisioning profiles to the correct targets within your project.
          xcode-project use-profiles 

          # Change back to the root directory for subsequent commands
          cd ../..

      - name: Build and export iOS app
        script: |
          XCARCHIVE_PATH="${CM_BUILD_DIR}/App.xcarchive"

          echo "Archiving project..."
          # xcodebuild will now use the signing identities applied by xcode-project use-profiles
          xcodebuild -workspace ios/App/App.xcworkspace \
            -scheme App \
            -configuration Release \
            -sdk iphoneos \
            -archivePath "${XCARCHIVE_PATH}" \
            archive || exit 1

          echo "Exporting IPA using Codemagic CLI..."
          # Ensure we are in the root directory for xcode-project build-ipa if needed,
          # or adjust paths if it expects to be in the ios/App directory.
          # CM_BUILD_DIR is the root of your cloned repository.
          cd "${CM_BUILD_DIR}" 

          xcode-project build-ipa \
            --archive-path "${XCARCHIVE_PATH}" \
            --workspace ios/App/App.xcworkspace \
            --scheme App \
            --ipa-directory build/ios/ipa

    artifacts:
      - build/**/*.ipa
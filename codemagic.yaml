workflows:
  ios-capacitor-testflight:
    name: iOS TestFlight Build
    environment:
      node: 22.15.0
      xcode: latest
      cocoapods: default
      vars:
        DEVELOPMENT_TEAM: "X3L24943PL" 
        BUNDLE_ID: "com.treasurefitness.com"
      groups:
        - firebase
    integrations:
      app_store_connect: admin_key

    scripts:
      - name: Install dependencies
        script: |
          npm ci
          npm run build

      - name: Capacitor Sync and Pod Install
        script: |
          npx cap sync ios
          cd ios/App && pod install

      - name: Set Development Team in Xcode project
        script: |
          # This sed command is still fine as it sets the team ID directly in the pbxproj
          XCODE_PROJECT="ios/App/App.xcodeproj/project.pbxproj"
          sed -i.bak "s/DEVELOPMENT_TEAM = .*/DEVELOPMENT_TEAM = ${DEVELOPMENT_TEAM};/g" $XCODE_PROJECT

      - name: Automatic Code Signing Setup
        script: |
          # Initialize keychain
          keychain initialize

          # Fetch or create signing files using App Store Connect API
          # --type IOS_APP_STORE is for TestFlight/App Store Distribution
          # --create will create if missing
          app-store-connect fetch-signing-files "${BUNDLE_ID}" --type IOS_APP_STORE --create

          # Apply fetched profiles to the Xcode project
          # This command automatically updates Xcode's signing settings
          xcode-project use-profiles

      - name: Build and export iOS app
        script: |
          cd ios/App

          # --- REMOVE the manual ExportOptions.plist generation ---
          # cat > ExportOptions.plist <<EOF
          # ... (all the plist content) ...
          # EOF
          # echo "--- Generated ExportOptions.plist ---"
          # cat ExportOptions.plist
          # echo "------------------------------------"
          # --- END REMOVAL ---

          # Archive the app (no change here)
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -configuration Release \
            -sdk iphoneos \
            -archivePath App.xcarchive \
            archive

          # Export the archive using automatic signing method
          # CodeMagic's xcode-project build-ipa will handle the ExportOptions.plist
          # It uses the signing files fetched by app-store-connect fetch-signing-files
          # It detects the correct method and signing certificate automatically
          xcode-project build-ipa \
            --archive-path App.xcarchive \
            --export-path ../../build \
            --distribution-type app_store # Use app_store for TestFlight/App Store

    artifacts:
      - build/**/*.ipa